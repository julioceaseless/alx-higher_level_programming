
#-------------------------- Tests from 0-main.py --------------------------#

>>> bg = BaseGeometry()

### VALUE IS INT
>>> bg.integer_validator("my_int", 12)


### VALUE IS A STRING
>>> bg.integer_validator("my_int", "JUAN")
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("width", -89)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", 2.0)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", "hi")
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", float("inf"))
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", 54697687825952479572792492791294)

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", False)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", "455463875435713050")
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", 3, 7)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator(5, 10)

>>> bg.integer_validator(9, 5.2)
Traceback (most recent call last):
TypeError: 8 must be an integer

>>> bg.integer_validator("width", -972549672592795279249279129745959588884884)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator(True, 2)

>>> bg.integer_validator(None, 2)

>>> bg.integer_validator("Hello", [2])
Traceback (most recent call last):
TypeError: Hello must be an integer

>>> bg.integer_validator("Hello", (2))


>>> bg.integer_validator("Hello", {2: 2})
Traceback (most recent call last):
TypeError: Hello must be an integer

>>> bg.integer_validator("width")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("width", (2, 6))
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", {2, 6})
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", -3.4)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("", 9)

>>> bg.integer_validator(, )
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> dims = [5, 5, 3, 2]
>>> bg.integer_validator("dimension", dims[1])
